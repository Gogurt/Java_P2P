package App;
import java.awt.Color;
import java.awt.FlowLayout;
import java.net.InetAddress;
import java.net.UnknownHostException;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JMenuItem;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.SwingConstants;

/**
 * Peer to Peer System
 * 3/2/16
 * A simple peer to peer application that allows
 * multiple users to exchange files with one another.
 */

public class Main {

	public static void main(String[] args) {
		//User-defined variables
		 InetAddress ip;
		 JLabel ipLabel;
		  try {
			ip = InetAddress.getLocalHost();
			System.out.println("Current IP address : " + ip.getHostAddress());

			ipLabel = new JLabel("ip: " + ip.getHostAddress().toString());
		  } catch (UnknownHostException e) {
			e.printStackTrace();
			ipLabel = new JLabel("ip: Unknown!", SwingConstants.CENTER);
		  }
		
		//Menu Bar Creation
		JMenuBar menubar = new JMenuBar();
		JMenu file = new JMenu("File");
		menubar.add(file);
		JMenuItem upload = new JMenuItem("Upload");
		file.add(upload);
		
		//IpDisplay
		JPanel panel = new JPanel(new FlowLayout(FlowLayout.LEFT));// places at the left
		panel.setForeground(Color.white);
		panel.setOpaque(false);
		ipLabel.setForeground(Color.white);
		panel.add(ipLabel);
		
		//User Login
		JTextField jTextField = new JTextField();
        jTextField.setText("jTextField1");
        jTextField.setOpaque(false);
        jTextField.setForeground(Color.white);
        jTextField.setBounds(40, 0, 10, 10);
		
		//Frame creation
		JFrame frame = new JFrame("Peer 2 Peer");
		frame.setSize(640, 360);
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		frame.setLocationRelativeTo(null);
		frame.getContentPane().setBackground(new Color(38,50,72));
		
		//Init of window contents before display
		frame.setJMenuBar(menubar);
		frame.add(panel);
        frame.getContentPane().add(jTextField);
		frame.setVisible(true);
		
	}

}
