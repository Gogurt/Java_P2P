package Server;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.net.InetAddress;
import java.net.ServerSocket;
import java.net.Socket;

public class Server {

	public static int serverPort = 555;
	
	public static void main(String[] args) {
		System.out.println("Starting P2P Directory Server...");
		
		ServerSocket serverSocket;
		Socket peerSocket;
		
		try {
			serverSocket = new ServerSocket(serverPort);
			System.out.println("Successfully created server socket " + serverSocket.getInetAddress().toString() + " on port " + serverPort);
			while(true) {
			    	System.out.println("Listening for connecting peers...");
			        peerSocket = serverSocket.accept();
			        
	                System.out.println("Heard response from " + peerSocket.getRemoteSocketAddress().toString());
			        Thread peerThread = new PeerSocketThread(peerSocket);
			        peerThread.start();
			}
		} catch (IOException e) {
			e.printStackTrace();
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

}

class PeerSocketThread extends Thread {
	public PeerSocketThread(Socket peerSocket) throws Exception {
		
		boolean connected = true;
		
		System.out.println("Threaded a new connected peer: " + peerSocket.getRemoteSocketAddress().toString());
		InetAddress inet = peerSocket.getInetAddress();
        PrintWriter out = new PrintWriter(peerSocket.getOutputStream(), true);
        out.println("Server has accepted your connection! Starting persistant socket connection...");
        while(connected)
        {
        	BufferedReader input = new BufferedReader(new InputStreamReader(peerSocket.getInputStream()));
		    String answer = input.readLine();
		    if(answer.length() != 0) {
		    	System.out.println("From peer " + answer);
		    }
		    if(peerSocket.isClosed()) {
		    	connected = false;
		    }
        }
        
        System.out.println("Disconnecting peer socket...");
        peerSocket.close();
		
	}
}